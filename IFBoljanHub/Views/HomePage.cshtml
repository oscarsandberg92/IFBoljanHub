@using System.Globalization;
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.HomePage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "Master.cshtml";
}
@{
    var url = "";
    var mediaItem = Model.Value<IPublishedContent>("heroImage");

    if (mediaItem != null)
    {
        url = mediaItem.Url();
    }
}

<div>
    <!--HERO START-->
    <div class="text-center bg-image rounded-3" style="background-image: url(@url); width: 100vw; height: 50vh; background-size: cover;">
        <div class="mask" style="background-color: rgba(255, 255, 255, 0.6);">
            <div class="d-flex justify-content-center align-items-center h-100">
                <div class="container text-white">
                    <h1 class="mb-3">@Model.Value("heroHeader")</h1>
                    <h4 class="mb-3">@Model.Value("heroText")</h4>
                </div>
            </div>
        </div>
    </div>
    <!--HERO END-->


    <div class="row text-center" style="height: 200px;">
            <h2>@Model.Value("upcomingGamesTitle")</h2>
        <div class="container d-flex gap-3 justify-content-center align-items-center">
            <div class="text-center">
                <h5>@Model.Value("mensNextGameTitle")</h5>
                <h4>@Model.Value("mensNextOpponent")</h4>
                <p>@FormatDate(Model.Value("mensNextGameDate") as DateTime?)</p>
                <p>@GetLocation(Model.Value("mensNextGameLocation") as bool?)</p>
            </div>
            <div class="text-center">
                <h5>@Model.Value("womensNextGameTitle")</h5>
                <h4>@Model.Value("womensNextOpponent")</h4>
                <p>@FormatDate(Model.Value("womensNextGameDate") as DateTime?)</p>
                <p>@GetLocation(Model.Value("womensNextGameLocation") as bool?)</p>
            </div>
        </div>
    </div>
</div>

@functions{
    string GetLocation(bool? value) =>
        value == true ? "Hemma" : "Borta";

    string FormatDate(DateTime? date)
    {
        var culture = new CultureInfo("sv-SE");

        return date.HasValue
            ? date.Value.ToString("yyyy-MM-dd HH:mm", culture)
            : "Datum är inte tillgängligt";
    }
}